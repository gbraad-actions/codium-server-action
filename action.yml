name: "Codium Server"
description: "Installs and runs Codium Server for debugging purpose"
author: "Gerard Braad <me@gbraad.nl>"

inputs:
  user:
    description: 'The user to start the service as'
    required: false
    default: 'runner'
  hangaround:
    description: 'Run the hangaround step'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Install Codium
      id: setup
      shell: bash
      run: |
        install_location="/opt/codium"
        
        arch=$(uname -m)
        case "$arch" in
          x86_64)
            download_target="x64"
            ;;
          aarch64)
            download_target="arm64"
            ;;
          *)
            echo "Unsupported architecture: $arch"
            return 1
            ;;
        esac

        echo "Installing VSCodium for: ${download_target}"

        API_URL="https://api.github.com/repos/VSCodium/vscodium/releases/latest"
        response=$(curl -s "$API_URL")
        download_url=$(echo "$response" | grep -oP "(?<=\"browser_download_url\": \")[^\"]*vscodium-reh-web-linux-${download_target}[^\"]*.tar.gz(?!.*sha)")
        version=$(echo "$download_url" | grep -oP '(?<=/download/)[^/]+')

        if [[ -z "$download_url" ]]; then
          echo "Download URL not found"
          exit 1
        fi

        temp_file=$(mktemp)
        curl -L -o "$temp_file" "$download_url"
        
        install_dir="$install_location/$version"
        mkdir -p "$install_dir"
        tar -xzf "$temp_file" -C "$install_dir"
        ln -sfn "$install_dir" "$install_location/latest"
        rm "$temp_file"

        mkdir -p "~${{ inputs.user }}/.local/bin"
        ln -sfn "$install_location/latest/bin/codium-server" "~${{ inputs.user }}/.local/bin/codium-server"

        echo "Downloaded and set up VSCodium version $version in $install_dir"

        sudo cp ${{ github.action_path }}/codium-server@.service /etc/systemd/system/
        sudo systemctl daemon-reload
    - name: Setup server
      shell: bash
      run: |
        sudo systemctl enable --now codium-server@${{ inputs.user }}
    - name: Usage
      shell: bash
      run: |
        sleep 5
        echo "Open in a browser: http://${HOSTNAME}:8000"
        until systemctl is-active --quiet codium-server@${{ inputs.user }}.service
        do
          sleep 5
        done

    - name: Hang around
      if: ${{ inputs.hangaround == 'true' }}
      shell: bash
      run: |
        until ! systemctl is-active --quiet codium-server@${{ inputs.user }}.service
        do
          sleep 10
        done
